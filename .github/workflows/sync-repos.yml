name: Sync from Airbyte Repository with History

on:
  # Manual trigger
  workflow_dispatch:
    inputs:
      source_branch:
        description: "Branch from Airbyte to sync (default: master)"
        required: false
        default: "master"
        type: string
      destination_branch:
        description: "Branch name to create in this repository"
        required: false
        default: "airbyte-sync"
        type: string
      pr_title:
        description: "Title for the Pull Request"
        required: false
        default: "Sync changes from Airbyte with history"
        type: string

  # # Optional: Schedule sync to run periodically
  # schedule:
  #   - cron: "0 0 * * 0" # Run weekly at midnight on Sunday
  #     # Remove or modify this schedule as needed

env:
  # Fixed values for Airbyte repository
  SOURCE_REPO: "airbytehq/airbyte"

  # Default values for other parameters
  DEFAULT_SOURCE_BRANCH: "master"
  DEFAULT_DESTINATION_BRANCH: "airbyte-sync"
  DEFAULT_PR_TITLE: "Weekly sync from Airbyte with history"
  # Track Airbyte's history in a separate branch
  AIRBYTE_TRACKING_BRANCH: "airbyte-source-history"

jobs:
  repo-sync:
    name: Sync Repository with History
    runs-on: ubuntu-latest

    steps:
      - name: Set repository parameters
        id: set-params
        run: |
          # Use input parameters or defaults based on trigger type
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "SOURCE_BRANCH=${{ github.event.inputs.source_branch || env.DEFAULT_SOURCE_BRANCH }}" >> $GITHUB_ENV
            echo "DESTINATION_BRANCH=${{ github.event.inputs.destination_branch || env.DEFAULT_DESTINATION_BRANCH }}" >> $GITHUB_ENV
            echo "PR_TITLE=${{ github.event.inputs.pr_title || env.DEFAULT_PR_TITLE }}" >> $GITHUB_ENV
          else
            echo "SOURCE_BRANCH=${{ env.DEFAULT_SOURCE_BRANCH }}" >> $GITHUB_ENV
            echo "DESTINATION_BRANCH=airbyte-sync-$(date +%Y%m%d)" >> $GITHUB_ENV
            echo "PR_TITLE=${{ env.DEFAULT_PR_TITLE }} - $(date +%Y-%m-%d)" >> $GITHUB_ENV
          fi

      - name: Check out destination repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          # Use GITHUB_TOKEN with the permissions defined at workflow level
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.name 'romario'
          git config --global user.email 'actions@github.com'

      - name: Add Airbyte repository as remote
        run: |
          # Add Airbyte repository as remote
          git remote add airbyte https://github.com/${{ env.SOURCE_REPO }}.git
          git fetch airbyte ${{ env.SOURCE_BRANCH }}

      - name: Update Airbyte tracking branch
        run: |
          # Check if tracking branch exists, create it if not
          if git show-ref --verify --quiet refs/heads/${{ env.AIRBYTE_TRACKING_BRANCH }}; then
            git checkout ${{ env.AIRBYTE_TRACKING_BRANCH }}
          else
            # Create orphan branch to track Airbyte's history separately
            git checkout --orphan ${{ env.AIRBYTE_TRACKING_BRANCH }}
            git reset --hard
          fi
          
          # Reset the tracking branch to match Airbyte's latest state
          git reset --hard airbyte/${{ env.SOURCE_BRANCH }}
          
          # Remove .github/workflows directory to prevent workflow conflicts
          if [ -d ".github/workflows" ]; then
            git rm -r --quiet --force .github/workflows/ || true
            git commit -m "Exclude .github/workflows directory from sync" || true
          fi
          
          # Push the updated tracking branch
          git push origin ${{ env.AIRBYTE_TRACKING_BRANCH }} --force

      - name: Create sync branch for PR
        run: |
          # Start a new branch from master for the PR
          git checkout -b ${{ env.DESTINATION_BRANCH }} origin/master
          
          # Merge the Airbyte tracking branch (without fast-forward to maintain history)
          git merge --no-ff ${{ env.AIRBYTE_TRACKING_BRANCH }} -m "Merge Airbyte changes from ${{ env.SOURCE_BRANCH }}"
          
          # Push the branch
          git push origin ${{ env.DESTINATION_BRANCH }} --force

      - name: Create Pull Request
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { repo, owner } = context.repo;
            const body = `This PR syncs changes from airbytehq/airbyte:${process.env.SOURCE_BRANCH} to this repository, preserving the commit history.

            **Note**: This sync maintains Airbyte's commit history in a separate branch (${process.env.AIRBYTE_TRACKING_BRANCH}) 
            and then merges those changes into the main branch. This approach prevents duplicating commits 
            and allows the repository to have its own commits without causing conflicts in future syncs.
            
            The \`.github/workflows/\` directory has been excluded from this sync to prevent workflow permission issues.`;

            try {
              const pr = await github.rest.pulls.create({
                owner,
                repo,
                title: process.env.PR_TITLE,
                head: process.env.DESTINATION_BRANCH,
                base: 'master',  // Change this if your default branch is different
                body: body
              });
              
              console.log(`Pull request created: ${pr.data.html_url}`);
            } catch (error) {
              console.error(`Failed to create PR: ${error.message}`);
              core.setFailed(`Failed to create PR: ${error.message}`);
            }
